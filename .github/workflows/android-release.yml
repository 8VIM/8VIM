name: Android Release

on:
  push:
    tags: ["iteration-*"]

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      version_code: ${{ steps.vars.outputs.version_code }}
    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: |
          set +a
          . ./8vim/version.properties
          set -a
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    name: Build release
    needs: get_version
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: temurin
          cache: gradle
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > 8vim/8vim.jks
      - name: Build APK
        env:
          VIM8_BUILD_KEYSTORE_FILE: ./8vim.jks
          VIM8_BUILD_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          VIM8_BUILD_KEY_ALIAS: ${{ secrets.ALIAS }}
          VIM8_BUILD_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease
      - name: Upload artifact apk
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: 8vim/build/outputs/apk/release/8vim-release.apk
          retention-days: 1
      - name: Upload artifact mapping
        uses: actions/upload-artifact@v3
        with:
          name: mapping
          path: 8vim/build/outputs/mapping/release/mapping.txt
          retention-days: 1
  release:
    needs: [build, get_version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        id: apk
        uses: actions/download-artifact@v3
        with:
          name: apk
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: metadata/en-US/changelogs/${{needs.get_version.outputs.version_code}}.txt
          files: |
            ${{ steps.apk.outputs.download-paths }}
  playstore:
    needs: [get_version, build]
    runs-on: ubuntu-latest
    name: Upload to Google Playstore
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v3
      - run: |
          mkdir -p distribution/whatsnew
          cp metadata/en-US/changelogs/${{needs.get_version.outputs.version_code}}.txt distribution/whatsnew/whatsnew-en-US
      - name: Download APK artifact
        id: apk
        uses: actions/download-artifact@v3
        with:
          name: apk
      - name: Download mapping artifact
        id: mapping
        uses: actions/download-artifact@v3
        with:
          name: mapping
      - name: Google play release
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: inc.flide.vi8
          releaseFiles: ${{ steps.apk.outputs.download-paths }}
          track: production
          whatsNewDirectory: distribution/whatsnew
          mappingFile: ${{ steps.mapping.outputs.download-paths }}
