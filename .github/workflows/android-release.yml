name: Android Release

on:
  push:
    branches: [ master ]
    tags: [ ".*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: temurin
          cache: gradle
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > 8vim/8vim.jks
      - name: Build APK
        env:
          VIM8_BUILD_KEYSTORE_FILE: ./8vim.jks
          VIM8_BUILD_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          VIM8_BUILD_KEY_ALIAS:  ${{ secrets.ALIAS }}
          VIM8_BUILD_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease
      - name: Upload artifact apk
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: 8vim/build/outputs/apk/release/8vim-release.apk
          retention-days: 1
      - name: Upload artifact mapping
        uses: actions/upload-artifact@v3
        with:
          name: mapping
          path: 8vim/build/outputs/mapping/release/mapping.txt
          retention-days: 1
  changelog:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        id: apk
        uses: actions/download-artifact@v3
        with:
          name: apk
      - name: Create Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: changelog-configuration.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.github_release.outputs.changelog}}
          files: |
            ${{ steps.apk.outputs.download-paths }}
  playstore:
    needs: build
    runs-on: ubuntu-latest
    name: Upload to Google Playstore
    steps:
      - uses: actions/checkout@v3
      - name: Download APK artifact
        id: apk
        uses: actions/download-artifact@v3
        with:
          name: apk
      - name: Download mapping artifact
        id: mapping
        uses: actions/download-artifact@v3
        with:
          name: mapping
      - name: Google play release
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: inc.flide.vi8
          releaseFiles: ${{ steps.apk.outputs.download-paths }}
          track: internal
          status: inProgress
          whatsNewDirectory: distribution/whatsnew
          mappingFile: ${{ steps.mapping.outputs.download-paths }}
  cleanup_artifact:
    if: ${{ always() }}
    needs: [playstore, changelog]
    runs-on: ubuntu-latest
    name: Cleanup artifact
    steps:
      - uses: actions/checkout@v3
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: apk
          failOnError: false
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: mapping
          failOnError: false