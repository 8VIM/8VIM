name: Bump version
on:
  workflow_call:
    inputs:
      message:
        type: string
      version:
        required: true
        type: string
    outputs:
      version_code:
        value: ${{jobs.bump_version.outputs.version_code}}
      version_name:
        value: ${{jobs.bump_version.outputs.version_name}}
jobs:
  version:
    name: Get version
    uses: ./.github/workflows/extract-version.yaml
  bump_version:
    needs: version
    runs-on: ubuntu-latest
    name: Bump 8VIM version
    outputs:
      version_code: ${{steps.vars.outputs.version_code}}
      version_name: ${{steps.vars.outputs.version_name}}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          persist-credentials: false
          fetch-depth: 0
      - name: bump version
        id: vars
        env:
          MAJOR: ${{needs.version.outputs.major}}
          MINOR: ${{needs.version.outputs.minor}}
          PATCH: ${{needs.version.outputs.patch}}
          RC: ${{needs.version.outputs.RC}}
          VERSION: ${{ inputs.version }}
        run: |
          RC_CODE=0
          if [ $VERSION = "rc" ]
          then
            RC=$(($RC+1))
            echo "version_name=$MAJOR.$MINOR.$PATCH-rc.$RC" >> $GITHUB_OUTPUT
            RC_CODE=$((100-$RC))
          else
            RC=0
            if [ $VERSION = "patch" ]
            then
              PATCH=$(($PATCH+1))
            else
              PATCH=0
              if [ $VERSION = "minor" ]
              then
                MINOR=$(($MINOR+1))
              else
                if [ $VERSION = "major" ]
                then
                  MINOR=0
                  MAJOR=$(($MAJOR+1))
                fi
              fi
            fi
            echo "version_name=$MAJOR.$MINOR.$PATCH" >> $GITHUB_OUTPUT
          fi

          echo "MAJOR=$MAJOR" > 8vim/version.properties
          echo "MINOR=$MINOR" >> 8vim/version.properties
          echo "PATCH=$PATCH" >> 8vim/version.properties
          echo -n "RC=$RC" >> 8vim/version.properties

          echo "version_code=$(( 1000000 * $MAJOR + 10000 * $MINOR + 100 * $PATCH - $RC_CODE))" >> $GITHUB_OUTPUT
      - name: Commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          if [ -n "${{inputs.message}}" ]
          then
            echo -en "${{ inputs.message }}" > metadata/en-US/changelogs/${{steps.vars.outputs.version_code}}.txt
            git add metadata/en-US/changelogs/${{steps.vars.outputs.version_code}}.txt
          fi

          set +e
          git commit -a -m "chore(bump): release v${{steps.vars.outputs.version_name}}"
          set -e

          if [ -n "${{inputs.message}}" ]
          then
            git tag v${{steps.vars.outputs.version_name}}
          fi
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
          tags: true
