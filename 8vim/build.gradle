plugins {
    alias(libs.plugins.agp.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.mannodermaus.android.junit5)
}

apply plugin: 'checkstyle'

check.dependsOn('checkstyle')

checkstyle {
    toolVersion = '10.12.0'
}

android {
    namespace 'inc.flide.vim8'
    compileSdkVersion 33

    defaultConfig {
        applicationId "inc.flide.vi8"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 16
        versionName "iteration-13"

        vectorDrawables.useSupportLibrary = true
        resValue "string", "version_name", versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    bundle.language.enableSplit false

    if (System.getenv("VIM8_BUILD_KEYSTORE_FILE") != null) {
        signingConfigs {
            release {
                storeFile file(System.getenv("VIM8_BUILD_KEYSTORE_FILE"))
                storePassword System.getenv("VIM8_BUILD_KEYSTORE_PASSWORD")
                keyAlias System.getenv("VIM8_BUILD_KEY_ALIAS")
                keyPassword System.getenv("VIM8_BUILD_KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (System.getenv("VIM8_BUILD_KEYSTORE_FILE") != null) {
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lint {
        abortOnError true
        disable 'ObsoleteLintCustomCheck', 'ClickableViewAccessibility', 'VectorPath', 'UnusedResources', 'GradleDependency', 'OldTargetApi'
        htmlReport true
        warningsAsErrors true
    }
}

dependencies {
    implementation(libs.android.material)
    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.lifecycle.viewmodel.ktx)
    implementation(libs.androidx.preference)
    implementation(libs.androidx.recyclerview)
    implementation(libs.apache.commons.text)
    implementation(libs.colorpreference)
    implementation(libs.jackson.dataformat.yaml)
    implementation(libs.json.schema.validator)
    implementation(libs.keyboardview)
    implementation(libs.logback.android)
    implementation(libs.material.dialog.core)
    implementation(libs.slf4j.api)

    androidTestImplementation(libs.androidx.test.core)
    androidTestImplementation(libs.androidx.test.ext)
    androidTestImplementation(libs.androidx.test.espresso.core)
    androidTestImplementation(libs.androidx.test.runner)
    androidTestImplementation(libs.junit4)

    testImplementation(libs.logback.classic)
    testImplementation(libs.assertj.core)
    testImplementation(libs.junit5.api)
    testRuntimeOnly(libs.junit5.jupiter.engine)
    testRuntimeOnly(libs.junit5.vintage.engine)
    testImplementation(libs.jqwik)
    testImplementation(libs.mockito.core)
    testImplementation(libs.mockito.junit5)
}

configurations.testImplementation {
    exclude module: 'logback-android'
}

task checkstyle(type: Checkstyle) {
    showViolations = true
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'

    classpath = files()
}