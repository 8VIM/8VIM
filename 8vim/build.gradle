plugins {
    id 'org.jetbrains.kotlin.android' version '1.8.10'
    id 'de.mannodermaus.android-junit5' version '1.9.3.0'
}

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

checkstyle {
    toolVersion = '10.12.0'
}

check.dependsOn('checkstyle')

android {
    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    
    def versionMajor = versionProps['MAJOR'].toInteger()
    def versionMinor = versionProps['MINOR'].toInteger()
    def versionPatch = versionProps['PATCH'].toInteger()
    def versionRc = versionProps['RC'].toInteger()

    compileSdkVersion 33
    
    defaultConfig {

        applicationId "inc.flide.vi8"
        minSdkVersion 24
        targetSdkVersion 33

        versionCode versionMajor * 1000000 + 10000 * versionMinor + 100 * versionPatch - (versionRc>0?100 - versionRc:0)
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        
        resValue "string", "version_name", versionName
        
        if(versionRc > 0) {
            versionNameSuffix "-rc.${versionRc}"
            resValue "string", "version_name", versionName + versionNameSuffix
        }
        
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    if (System.getenv("VIM8_BUILD_KEYSTORE_FILE") != null) {
        signingConfigs {
            release {
                storeFile file(System.getenv("VIM8_BUILD_KEYSTORE_FILE"))
                storePassword System.getenv("VIM8_BUILD_KEYSTORE_PASSWORD")
                keyAlias System.getenv("VIM8_BUILD_KEY_ALIAS")
                keyPassword System.getenv("VIM8_BUILD_KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (System.getenv("VIM8_BUILD_KEYSTORE_FILE") != null) {
                signingConfig signingConfigs.release
            }
        }

        create("rc") {
            initWith release
            applicationIdSuffix ".rc"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }

    lint {
        abortOnError true
        disable 'ObsoleteLintCustomCheck', 'ClickableViewAccessibility', 'VectorPath', 'UnusedResources', 'GradleDependency', 'OldTargetApi'
        htmlOutput file('lint-report.html')
        htmlReport true
        warningsAsErrors true
    }

    namespace 'inc.flide.vim8'
}

dependencies {
    implementation "androidx.constraintlayout:constraintlayout:${rootProject.androidXConstraintlayoutVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.androidXLifecycleViewmodelVersion}"
    implementation "androidx.preference:preference:${rootProject.androidXPreferenceVersion}"
    implementation "com.afollestad.material-dialogs:core:${rootProject.materialDialogs}"
    implementation 'com.networknt:json-schema-validator:1.0.73'
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${rootProject.jacksonYamlVersion}"
    implementation "com.github.kizitonwose.colorpreference:support:${rootProject.colorPreferenceVersion}"
    implementation "com.google.android.material:material:${rootProject.androidMaterialVersion}"
    implementation "io.github.hijamoya:keyboardview:0.0.2"
    implementation "org.apache.commons:commons-text:${rootProject.apacheCommonTextVersion}"

    androidTestImplementation "androidx.test:core:${rootProject.androidXTestCoreVersion}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.androidXTestExtJUnitVersion}"
//    androidTestImplementation "androidx.test.ext:truth:${rootProject.androidXTesExtTruthVersion}"
    androidTestImplementation "androidx.test:runner:${rootProject.androidXTestRunnerVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${rootProject.espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${rootProject.espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:${rootProject.espressoVersion}"
    androidTestImplementation "org.mockito:mockito-android:${rootProject.mockitoVersion}"

    androidTestImplementation "junit:junit:${rootProject.junit4Version}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${rootProject.junit5Version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${rootProject.junit5Version}"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${rootProject.junit5Version}"
    testImplementation "net.jqwik:jqwik:${rootProject.jqwikVersion}"
    testImplementation "org.assertj:assertj-core:${rootProject.assertJVersion}"
    testImplementation "org.mockito:mockito-core:${rootProject.mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${rootProject.mockitoVersion}"

}
